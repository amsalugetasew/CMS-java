
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gech
 */
public class SUMERY_PAGE extends javax.swing.JFrame {

    /**
     * Creates new form SUMERY_PAGE
     */
    public SUMERY_PAGE(String x,String y,String z) {
        initComponents();
        display.setText(x);
          displayp.setText(y);  
          infoid.setText(z);
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        rgbtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        idfs = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        pnm = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        smry = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        omry = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        assmnt = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        display = new javax.swing.JLabel();
        displayp = new javax.swing.JLabel();
        infoid = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1112, 693));
        setPreferredSize(new java.awt.Dimension(1112, 693));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton5.setText("TO PRESCRIB");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton5);
        jButton5.setBounds(550, 363, 180, 30);

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("PERVIOUSE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton2);
        jButton2.setBounds(50, 360, 135, 31);

        rgbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        rgbtn.setText("REGISTER");
        rgbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rgbtnActionPerformed(evt);
            }
        });
        jDesktopPane1.add(rgbtn);
        rgbtn.setBounds(193, 360, 130, 31);

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton4.setText("TO INVESTIGATE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton4);
        jButton4.setBounds(340, 360, 190, 31);

        jButton6.setText("SEARCH FOR UPDATE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton6);
        jButton6.setBounds(580, 40, 170, 40);
        jDesktopPane1.add(idfs);
        idfs.setBounds(380, 40, 180, 40);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("SUMMERY PAGE");
        jDesktopPane1.add(jLabel6);
        jLabel6.setBounds(180, 90, 260, 20);

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel24.setText("PATIENT NAME");
        jDesktopPane1.add(jLabel24);
        jLabel24.setBounds(100, 130, 158, 29);
        jDesktopPane1.add(pnm);
        pnm.setBounds(370, 120, 324, 40);

        smry.setColumns(20);
        smry.setRows(5);
        jScrollPane1.setViewportView(smry);

        jDesktopPane1.add(jScrollPane1);
        jScrollPane1.setBounds(370, 170, 324, 50);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("SUBJECTIVE SUMMERY");
        jDesktopPane1.add(jLabel8);
        jLabel8.setBounds(90, 190, 250, 25);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("OBJECTIVE SUMMERY");
        jDesktopPane1.add(jLabel7);
        jLabel7.setBounds(90, 240, 260, 25);

        omry.setColumns(20);
        omry.setRows(5);
        jScrollPane3.setViewportView(omry);

        jDesktopPane1.add(jScrollPane3);
        jScrollPane3.setBounds(370, 230, 324, 50);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("DIAGNOSIS(ASSASSEMENT)");
        jDesktopPane1.add(jLabel9);
        jLabel9.setBounds(90, 300, 260, 25);

        assmnt.setColumns(20);
        assmnt.setRows(5);
        jScrollPane4.setViewportView(assmnt);

        jDesktopPane1.add(jScrollPane4);
        jScrollPane4.setBounds(370, 290, 324, 50);
        jDesktopPane1.add(jPanel1);
        jPanel1.setBounds(10, 10, 790, 460);

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 810, 480));
        getContentPane().add(display, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 120, 30));
        getContentPane().add(displayp, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 0, 130, 30));

        infoid.setText("jLabel1");
        getContentPane().add(infoid, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 524, 90, 20));

        jMenu1.setText("                  LOGOUT  ");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         new pysical_examintion5(display.getText(),displayp.getText(),infoid.getText()).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         new INVESTIGATION_PAGE(display.getText(),displayp.getText()).setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void rgbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rgbtnActionPerformed

      String subjective_summry=smry.getText();
      String objective_summry=omry.getText();
      String assasment=assmnt.getText();
      try
            {
                   if (smry.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER SUBJECTIVE SUMMERY",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                } else if (omry.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER OBJECTIVE SUMMERY",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                } else if (assmnt.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER ASSASSMENT",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                }
                else{
                
                RMIInterface hello=(RMIInterface)
                Naming.lookup("//localhost/clinical");
                System.out.println(hello.SUMMERY(idfs.getText(),rgbtn.getText(),subjective_summry,objective_summry,assasment));
                    JOptionPane.showMessageDialog(null, "SUCCESSFULLY  EXAMINED", 
                                              null,
                                              JOptionPane.PLAIN_MESSAGE);
                }
            }
               catch(NotBoundException e){
                System.out.println("Clinicalclient not bound exception:" +e);
               // lbl.setText("Clinicalclient not bound exception:" +e.getMessage());
            }
            catch(Exception e){
                System.out.println("HelloClient exception:" +e);
            }
       
        
    }//GEN-LAST:event_rgbtnActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

      new Prescription(display.getText(),displayp.getText(),"SUMERY_PAGE").setVisible(true);
      this.setVisible(false);
        
        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
          try {
            RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");

            String fetch[] = new String[5000];
            fetch = hello.Update_examination1();
            int c = fetch.length;
            int i = 0, j = 0, idx = 0;
            if (c >= 1) {
                while (i < c) {
                    infoid.setText(fetch[0]);
                  //  gap.setText(fetch[9]);
                    String x = (fetch[3]);
//                          int len = x.length();
//                            char[] cc = x.toCharArray();
//                            for (int h = 0; h < len - 2; h = h + 3) {
//                                char temp = cc[h];
//                                cc[h] = cc[h + 2];
//                                cc[h + 2] = temp;
//                            }
//                             x = String.valueOf(cc);
                    String y = (fetch[4]);
//                    
//                         cc = y.toCharArray();
//                            for (int h = 0; h < len - 2; h = h + 3) {
//                                char temp = cc[h];
//                                cc[h] = cc[h + 2];
//                                cc[h + 2] = temp;
//                            }
//                             y= String.valueOf(cc);
                    String z = x + "   " + y;
                    pnm.setText(z);
//                    hd.setText(fetch[11]);
//                   String blood= (fetch[10]);
//                //   blood presure=
//                   String first="";
//                    int length = blood.length();
//        char[] ccx = blood.toCharArray();
//        for (int h = 0; h < 16; h = h + 1) {
//            first = first + ccx[h];
//        }
//                   
//                        bp.setText(first);
//                        
//                              String firsts="";
//        char[] ccxs = blood.toCharArray();
//        for (int h = 16; h < 36; h = h + 1) {
//            firsts = firsts + ccxs[h];
//        }
//                   
//                        rr.setText(firsts);
//                        
//                        
//                          String firstss="";
//        char[] ccxss = blood.toCharArray();
//        for (int h = 36; h < 50; h = h + 1) {
//            firstss = firstss + ccxs[h];
//        }
//                   
//                        pr.setText(firstss);
//                        
//                       String firstsss="";
//        char[] ccxsss = blood.toCharArray();
//        for (int h = 50; h < 64; h = h + 1) {
//            firstsss = firstsss + ccxss[h];
//        }
//                   
//                        tmp.setText(firstsss); 
                        
                    i++;
                }
//                    JOptionPane.showMessageDialog(null, "SUCCESSFULL", 
//                                              null,
//                                              JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "EMPTY",
                        null,
                        JOptionPane.PLAIN_MESSAGE);
            }
            // }
            infoid.setVisible(false);

        } catch (NotBoundException e) {
            System.out.println("Clinicalclient not bound exception:" + e);
            // lbl.setText("Clinicalclient not bound exception:" +e.getMessage());
        } catch (Exception e) {
            System.out.println("HelloClient exception:" + e);
        }
    }//GEN-LAST:event_formWindowActivated

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        try {
            RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");

            String fetch[] = new String[5000];
            fetch = hello.Update_examination1(idfs.getText());
            int c = fetch.length;
            int i = 0, j = 0, idx = 0;
            if (c >= 1) {
                if(rgbtn.getText().equals("REGISTER"))
                {
                    rgbtn.setText("UPDATE");
                }

                while (i < c) {
                    infoid.setText(fetch[0]);

                    smry.setText(fetch[61]);
                    omry.setText(fetch[62]);
                    assmnt.setText(fetch[63]);
                   // ausc.setText(fetch[42]);
                    // tmp.setText(fetch[14]);

//                    insps.setText(fetch[43]);
//                    plps.setText(fetch[44]);
//                    prcs.setText(fetch[45]);
//                    ascs.setText(fetch[46]);
                    // mth.setText(fetch[19]);
                    // pr.setText(fetch[13]);
                    // bp.setText(fetch[11]);
                    String x = (fetch[3]);
                    //                          int len = x.length();
                    //                            char[] cc = x.toCharArray();
                    //                            for (int h = 0; h < len - 2; h = h + 3) {
                        //                                char temp = cc[h];
                        //                                cc[h] = cc[h + 2];
                        //                                cc[h + 2] = temp;
                        //                            }
                    //                             x = String.valueOf(cc);
                    String y = (fetch[4]);

                    //                         cc = y.toCharArray();
                    //                            for (int h = 0; h < len - 2; h = h + 3) {
                        //                                char temp = cc[h];
                        //                                cc[h] = cc[h + 2];
                        //                                cc[h + 2] = temp;
                        //                            }
                    //                             y= String.valueOf(cc);
                    String z = x + "   " + y;
                    pnm.setText(z);
                    //                    hd.setText(fetch[11]);
                    //                   String blood= (fetch[10]);
                    //                //   blood presure=
                    //                   String first="";
                    //                    int length = blood.length();
                    //        char[] ccx = blood.toCharArray();
                    //        for (int h = 0; h < 16; h = h + 1) {
                        //            first = first + ccx[h];
                        //        }
                    //
                    //                        bp.setText(first);
                    //
                    //                              String firsts="";
                    //        char[] ccxs = blood.toCharArray();
                    //        for (int h = 16; h < 36; h = h + 1) {
                        //            firsts = firsts + ccxs[h];
                        //        }
                    //
                    //                        rr.setText(firsts);
                    //
                    //
                    //                          String firstss="";
                    //        char[] ccxss = blood.toCharArray();
                    //        for (int h = 36; h < 50; h = h + 1) {
                        //            firstss = firstss + ccxs[h];
                        //        }
                    //
                    //                        pr.setText(firstss);
                    //
                    //                       String firstsss="";
                    //        char[] ccxsss = blood.toCharArray();
                    //        for (int h = 50; h < 64; h = h + 1) {
                        //            firstsss = firstsss + ccxss[h];
                        //        }
                    //
                    //                        tmp.setText(firstsss);

                    i++;
                }
                //                    JOptionPane.showMessageDialog(null, "SUCCESSFULL",
                    //                                              null,
                    //                                              JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "EMPTY",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            }
            // }
        infoid.setVisible(false);

        } catch (NotBoundException e) {
            System.out.println("Clinicalclient not bound exception:" + e);
            // lbl.setText("Clinicalclient not bound exception:" +e.getMessage());
        } catch (Exception e) {
            System.out.println("HelloClient exception:" + e);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
       new LOGIN().setVisible(true);
       this.setVisible(false);
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SUMERY_PAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SUMERY_PAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SUMERY_PAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SUMERY_PAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SUMERY_PAGE("","","").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea assmnt;
    private javax.swing.JLabel display;
    private javax.swing.JLabel displayp;
    private javax.swing.JTextField idfs;
    private javax.swing.JLabel infoid;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea omry;
    private javax.swing.JTextField pnm;
    private javax.swing.JButton rgbtn;
    private javax.swing.JTextArea smry;
    // End of variables declaration//GEN-END:variables
}
