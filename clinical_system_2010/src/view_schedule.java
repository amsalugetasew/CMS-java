
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.security.MessageDigest;
import java.text.MessageFormat;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gech
 */
public class view_schedule extends javax.swing.JFrame {

    /**
     * Creates new form view_schedule
     */
    public view_schedule(String x,String y) {
        initComponents();
        display.setText(x);
          displayp.setText(y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        display = new javax.swing.JLabel();
        displayp = new javax.swing.JLabel();
        rptyp = new javax.swing.JComboBox();
        sex = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txta = new javax.swing.JTextArea();
        cmd_print = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        rptyp1 = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1112, 693));
        setPreferredSize(new java.awt.Dimension(1112, 693));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(display, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, 120, 30));
        getContentPane().add(displayp, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 0, 130, 30));

        rptyp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TYPE OF REPORT", "MONTHLY", "ANNUALLY", "WEEKLY" }));
        rptyp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptypActionPerformed(evt);
            }
        });
        getContentPane().add(rptyp, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 140, 30));

        sex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT SEX", "MALE", "FEMALE" }));
        sex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexActionPerformed(evt);
            }
        });
        getContentPane().add(sex, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 140, 30));

        txta.setColumns(20);
        txta.setRows(5);
        txta.setBorder(null);
        jScrollPane1.setViewportView(txta);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 810, 410));

        cmd_print.setText("PRINT");
        cmd_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_printActionPerformed(evt);
            }
        });
        getContentPane().add(cmd_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 40, 90, 30));

        jButton1.setText("VIEW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 40, 77, 30));

        rptyp1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TYPE OF REPORT", "SERVED", "READY TO SERVE", "CALLED BUT NOT SERVED", "NOT CALLED" }));
        rptyp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptyp1ActionPerformed(evt);
            }
        });
        getContentPane().add(rptyp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 40, 140, 30));

        jMenu1.setText("BACK                                        ");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("LOGOUT                          ");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
     if (displayp.getText().equals("DOCTOR/NURSE")) {
            new Doctor(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        } else if (displayp.getText().equals("RECEPTION")) {
            new Reception(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        } else if (displayp.getText().equals("PHARMACIST")) {
            new Pharmacist(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        } else if (displayp.getText().equals("LABORATORIST")) {
            new Laboratorist(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        } else if (displayp.getText().equals("MANAGER")){
            new Manager(displayp.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        
}
        //         new Reception(display.getText(), displayp.getText()).setVisible(true);
//        this.setVisible(false);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        new LOGIN().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void rptypActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptypActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptypActionPerformed

    private void sexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexActionPerformed

    private void cmd_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_printActionPerformed
        MessageFormat header = new MessageFormat("Report Print");
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");
        try {
            //            pttable.print(JTable.PrintMode.NORMAL, header, footer);
            txta.print(header, footer);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("", e.getMessage());
        }

    }//GEN-LAST:event_cmd_printActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int k;
        try {
            Mainclass ob = new Mainclass();
            RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");
             if (rptyp.getSelectedItem().toString().equals("TYPE OF REPORT")) {
                JOptionPane.showMessageDialog(null, "PLEASE SELECT THE SECOND REPORT TYPE",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            } else if (sex.getSelectedItem().toString().equals("SELECT SEX")) {
                JOptionPane.showMessageDialog(null, "PLEASE SELECT SEX",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            } else {

                int patient_identification = hello.view_pat_schedule(rptyp1.getSelectedItem().toString(),rptyp.getSelectedItem().toString(), sex.getSelectedItem().toString());

                if (patient_identification < 1) {
                    String report = (rptyp.getSelectedItem().toString() + "   " + sex.getSelectedItem().toString() + "   PATEINTS   IDENTIFICATION   INFORMATION   REPORT   IN   UNIVERSITY   OF   GONDAR   ATSE   TEWODROSE   STUDENT  CLINIC   \n ");

                    txta.setText(report+":   DOES NOT EXIST");
                } else {
                    System.out.println(patient_identification);
                    int arraysize = patient_identification * 12;

                    String fetch[] = new String[arraysize];
                    fetch = hello.view_pat_schedules(rptyp1.getSelectedItem().toString(),arraysize, rptyp.getSelectedItem().toString(), sex.getSelectedItem().toString());
                    int cc = 0;
                    int c = fetch.length;
                    int i = 0, j = 0, idx = 0;
                    if (c >= 1) {
                        String report = (rptyp.getSelectedItem().toString() + "  " +"   " + rptyp1.getSelectedItem().toString() + "   PATEINTS   IDENTIFICATION   INFORMATION   REPORT   IN   UNIVERSITY   OF   GONDAR   ATSE   TEWODROSE   STUDENT  CLINIC   \n ");

                        String s = report + "\n add here the needed information\n    SCHEDULE ID" + "     INFOMATION ID" + "     " + "CARD NUMBER" + "         " + "ID NUMBER         AGE" + "     " + "SERVIECE" + "         " + "DATE" + "        STATUES" + "                       " + "TIME" + "         " + "CALLED"  + "      BLOCK NUMBER" + "         " + "DORMITORY NUMBER" + "      \n";

                        while (cc <= arraysize) {
                            s = s + "   " + fetch[cc] + "                              " + fetch[cc + 1] + "                           " + fetch[cc + 2] + "                    " + fetch[cc + 3] + "                    " + fetch[cc + 4] + "                  " + fetch[cc + 5] + "          " + fetch[cc + 6] + "           " + fetch[cc + 7] + "      " + fetch[cc + 8] + "               " + fetch[cc + 9] + "             " + fetch[cc + 10] + "      " + fetch[cc + 11] + "      " + fetch[cc + 12] + "           \n";
                            txta.setText(s);
                            cc = cc + 12;
                        }

                    } else {

                        JOptionPane.showMessageDialog(null, "PATIENT INFORMATION TABLE IS EMPTY",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                        txta.setText("");
                    }
                }
            }

        } catch (NotBoundException e) {
             JOptionPane.showMessageDialog(null, "Clinicalclient not bound exception:"+e,
                            null,
                            JOptionPane.PLAIN_MESSAGE);
              JOptionPane.showMessageDialog(null, "Clinicalclient not bound exception:" + e.getMessage(),
                            null,
                            JOptionPane.PLAIN_MESSAGE);
        } catch (Exception e) {
            System.out.println("HelloClient exception:" + e);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void rptyp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptyp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptyp1ActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
 if (displayp.getText().equals("MANAGER")){
         cmd_print.setVisible(true);
}
 else
 {
     cmd_print.setVisible(false);
 }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new view_schedule("","").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_print;
    private javax.swing.JLabel display;
    private javax.swing.JLabel displayp;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox rptyp;
    private javax.swing.JComboBox rptyp1;
    private javax.swing.JComboBox sex;
    private javax.swing.JTextArea txta;
    // End of variables declaration//GEN-END:variables
}
