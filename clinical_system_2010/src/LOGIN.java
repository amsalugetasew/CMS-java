
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author student
 */
public class LOGIN extends javax.swing.JFrame {

    /**
     * Creates new form LOGIN
     */
    public LOGIN() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        un = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        pw = new javax.swing.JPasswordField();
        lognbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        jButton1.setText("VIEW REFER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton1);
        jButton1.setBounds(200, 290, 120, 23);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("user name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 30));

        un.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unActionPerformed(evt);
            }
        });
        jPanel1.add(un, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 120, 30));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("password");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 107, 70, 30));
        jPanel1.add(pw, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 120, 30));

        lognbtn.setText("LOGIN");
        lognbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lognbtnActionPerformed(evt);
            }
        });
        jPanel1.add(lognbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, -1, -1));

        jDesktopPane1.add(jPanel1);
        jPanel1.setBounds(10, 10, 400, 370);

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 38, 420, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new View_refer("other","other","").setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void unActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unActionPerformed

    private void lognbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lognbtnActionPerformed
 
 try {
      //Create and get reference to rmi registry
      Registry registry = LocateRegistry.createRegistry(1099);
      Naming.rebind("clinical", (Remote) new Mainclass());
      System.out.println("cclinicallinical server is created!!!");
      System.out.println("clinical Server is ready....................");
    } catch (Exception e) {
      System.out.println(e);
    }
        Mainclass ob = null;
        String password=null;
        try {
            ob = new Mainclass();
        } catch (RemoteException ex) {
            Logger.getLogger(Calling_Patients.class.getName()).log(Level.SEVERE, null, ex);
        }
        String first_name = "";
        try {
            RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");
            ob.user_nme = un.getText();
            ob.password = pw.getText();
            String ch[] = new String[5];

            String pass=ob.password;
            MessageDigest md=null;//new MessageDigest("MD5");
            StringBuffer sb = new StringBuffer();
            try {
                md = MessageDigest.getInstance("MD5");
                byte[] passBytes = pass.getBytes();
                md.reset();
                byte[] digested = md.digest(passBytes);

                for(int i=0;i<digested.length;i++){
                    sb.append(Integer.toHexString(0xff & digested[i]));
                }
                password=sb.toString();
            } catch (NoSuchAlgorithmException ex) {
                // CryptWithMD5
                // Logger.getLogger(CryptWithMD5.class.getName()).log(Level.SEVERE, null, ex);
            }

            int counter=0,comt=0;

            if (ob.user_nme.isEmpty()) {
                JOptionPane.showMessageDialog(null, "PLEASE ENTER USER NAME",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            } else if ((un.getText().length() < 7) || (un.getText().length() > 30)) {
                JOptionPane.showMessageDialog(null, "USER NAME MUST BE AT \nLEAST SEVEN CHARACTER",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
                un.setBorder(null);
                un.setHighlighter(null);
                un.setText("");
            } else if (ob.password.isEmpty()) {
                JOptionPane.showMessageDialog(null, "PLEASE ENTER PASSWORD",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            } else if ((pw.getText().length() < 8) || (pw.getText().length() > 25)) {
                JOptionPane.showMessageDialog(null, "PASSWORD MUST BE AT \nLEAST EIGNT CHARACTER",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
                pw.setText("");
            }
            else{
                ch = hello.login(ob.user_nme, password);
                int cx = ch.length;
                int i = 0;
                String prof=null;
                if (cx >= 1) {
                    while (i < cx) {
                        first_name = (ch[1]);
                        prof=ch[9];
                        i++;
                    }
                    if (prof.equals("DOCTOR/NURSE")) {
                        new Doctor(first_name, prof).setVisible(true);
                        this.setVisible(false);
                    } else if (prof.equals("PHARMACIST")) {

                        new Pharmacist(first_name, prof).setVisible(true);
                        this.setVisible(false);
                    } else if (prof.equals("RECEPTION")) {

                        new Reception(first_name,prof).setVisible(true);
                        this.setVisible(false);
                    } else if (prof.equals("LABORATORIST")) {

                        new Laboratorist(first_name, prof).setVisible(true);
                        this.setVisible(false);

                    } else if (prof.equals( "MANAGER")) {

                        new Manager(first_name,prof).setVisible(true);
                        this.setVisible(false);
                    } else {
                        JOptionPane.showMessageDialog(null, "pls select profession:",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                    }
                } else {

                    JOptionPane.showMessageDialog(null, "incorrect login information:",
                        null,
                        JOptionPane.PLAIN_MESSAGE);
                    ////                for(int x=0;x<=3;x++)
                    ////                {
                        ////
                        //                comt++;
                        ////
                        ////                if(comt==3)
                        ////                {
                            ////                    break;
                            ////                }
                        //
                        ////                }
                    //                counter= counter+comt;
                    //                  System.out.println(counter);
                    //                if(counter>=3)
                    //                {
                        //                  lognbtn.hide();
                        //                  lognbtn.setVisible(false);
                        //                }
                }
            }
        } catch (NotBoundException e) {
            JOptionPane.showMessageDialog(null, "HelloClient not bound exception:" + e,
                null,
                JOptionPane.PLAIN_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "HelloClient exception:" + e,
                null,
                JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_lognbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LOGIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton lognbtn;
    private javax.swing.JPasswordField pw;
    private javax.swing.JTextField un;
    // End of variables declaration//GEN-END:variables
}
