
import java.awt.event.KeyEvent;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gech
 */
public class pysical_examintion extends javax.swing.JFrame {

    /**
     * Creates new form pysical_examintion
     */
    public pysical_examintion(String x, String y, String z) {
        initComponents();
        display.setText(x);
        displayp.setText(y);
        //  infoid.setText(z);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gap = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        pnm = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        mth = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        ns = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        eye = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        er = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        hd = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tmp = new javax.swing.JTextField();
        rr = new javax.swing.JTextField();
        pr = new javax.swing.JTextField();
        bp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        regbtn = new javax.swing.JButton();
        idfs = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        displayp = new javax.swing.JLabel();
        display = new javax.swing.JLabel();
        infoid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1160, 550));
        setPreferredSize(new java.awt.Dimension(1116, 633));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Algerian", 3, 18)); // NOI18N
        jLabel3.setText("PYSICAL EXAMINATION (P/E)");
        jDesktopPane1.add(jLabel3);
        jLabel3.setBounds(260, 20, 299, 25);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("pateint name");
        jDesktopPane1.add(jLabel6);
        jLabel6.setBounds(20, 140, 120, 30);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Algerian", 1, 14)); // NOI18N
        jLabel2.setText("vital sign");
        jDesktopPane1.add(jLabel2);
        jLabel2.setBounds(160, 230, 176, 20);

        gap.setColumns(20);
        gap.setRows(5);
        gap.setToolTipText("");
        jScrollPane1.setViewportView(gap);

        jDesktopPane1.add(jScrollPane1);
        jScrollPane1.setBounds(190, 180, 326, 52);

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel15.setText(" resparatory rate");
        jDesktopPane1.add(jLabel15);
        jLabel15.setBounds(20, 350, 150, 30);
        jDesktopPane1.add(pnm);
        pnm.setBounds(190, 130, 326, 40);

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel16.setText("general appearance");
        jDesktopPane1.add(jLabel16);
        jLabel16.setBounds(20, 190, 170, 30);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("temprature");
        jDesktopPane1.add(jLabel7);
        jLabel7.setBounds(20, 390, 140, 29);

        mth.setColumns(20);
        mth.setRows(5);
        mth.setToolTipText("");
        jScrollPane7.setViewportView(mth);

        jDesktopPane1.add(jScrollPane7);
        jScrollPane7.setBounds(700, 400, 326, 52);

        ns.setColumns(20);
        ns.setRows(5);
        ns.setToolTipText("");
        jScrollPane6.setViewportView(ns);

        jDesktopPane1.add(jScrollPane6);
        jScrollPane6.setBounds(700, 330, 326, 52);

        eye.setColumns(20);
        eye.setRows(5);
        eye.setToolTipText("");
        jScrollPane5.setViewportView(eye);

        jDesktopPane1.add(jScrollPane5);
        jScrollPane5.setBounds(700, 260, 326, 52);

        er.setColumns(20);
        er.setRows(5);
        er.setToolTipText("");
        jScrollPane4.setViewportView(er);

        jDesktopPane1.add(jScrollPane4);
        jScrollPane4.setBounds(700, 190, 326, 52);

        hd.setColumns(20);
        hd.setRows(5);
        hd.setToolTipText("");
        jScrollPane3.setViewportView(hd);

        jDesktopPane1.add(jScrollPane3);
        jScrollPane3.setBounds(700, 130, 326, 52);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText(" nose");
        jDesktopPane1.add(jLabel9);
        jLabel9.setBounds(530, 350, 80, 29);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("mouth and throat");
        jDesktopPane1.add(jLabel13);
        jLabel13.setBounds(540, 410, 150, 29);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("eye");
        jDesktopPane1.add(jLabel10);
        jLabel10.setBounds(530, 280, 50, 29);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("ear");
        jDesktopPane1.add(jLabel12);
        jLabel12.setBounds(530, 210, 40, 29);

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("head");
        jDesktopPane1.add(jLabel11);
        jLabel11.setBounds(530, 140, 50, 29);

        tmp.setToolTipText("");
        tmp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tmpKeyTyped(evt);
            }
        });
        jDesktopPane1.add(tmp);
        tmp.setBounds(190, 390, 330, 35);

        rr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rrKeyTyped(evt);
            }
        });
        jDesktopPane1.add(rr);
        rr.setBounds(190, 340, 330, 35);

        pr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prKeyTyped(evt);
            }
        });
        jDesktopPane1.add(pr);
        pr.setBounds(190, 290, 330, 35);

        bp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bpKeyTyped(evt);
            }
        });
        jDesktopPane1.add(bp);
        bp.setBounds(190, 250, 330, 35);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("  blood pressure");
        jDesktopPane1.add(jLabel4);
        jLabel4.setBounds(10, 250, 150, 29);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("pulse rate");
        jDesktopPane1.add(jLabel5);
        jLabel5.setBounds(20, 290, 130, 29);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Algerian", 1, 14)); // NOI18N
        jLabel8.setText(" heent");
        jDesktopPane1.add(jLabel8);
        jLabel8.setBounds(790, 90, 70, 30);

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("PREVIOUSE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton4);
        jButton4.setBounds(190, 450, 100, 40);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("SKIP");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton2);
        jButton2.setBounds(300, 450, 70, 40);

        regbtn.setBackground(new java.awt.Color(255, 255, 255));
        regbtn.setText("REGISTER");
        regbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regbtnActionPerformed(evt);
            }
        });
        jDesktopPane1.add(regbtn);
        regbtn.setBounds(400, 450, 100, 40);
        jDesktopPane1.add(idfs);
        idfs.setBounds(320, 70, 180, 40);

        jButton1.setText("SEARCH FOR UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton1);
        jButton1.setBounds(520, 70, 180, 40);
        jDesktopPane1.add(jPanel1);
        jPanel1.setBounds(10, 10, 1070, 490);

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 1090, 510));
        getContentPane().add(displayp, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, 130, 30));
        getContentPane().add(display, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 0, 120, 30));
        getContentPane().add(infoid, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 510, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new pysical_examintion2(display.getText(), displayp.getText(), infoid.getText()).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String hisid = infoid.getText();




        new Register_pat_history(display.getText(), displayp.getText(), infoid.getText()).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void regbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regbtnActionPerformed
        String vital_sign = null;
        String resparatory_rate = rr.getText();
        String blood_presure = bp.getText();
        String pulse_rate = pr.getText();
        String temprature = tmp.getText();
        String head = hd.getText();
        String ear = er.getText();
        String eyes = eye.getText();
        String nose = ns.getText();
        String mouth = mth.getText();
        String heent = null;
        String date = null;
        heent = "HEAD=" + head + "\nEAR=" + ear + "\nEYE" + eyes + "\nNOSE=" + nose + "\nMOUTH OR THORAT=" + mouth;
        vital_sign = "blood presure=" + blood_presure + "\nresparatory rate=" + resparatory_rate + "\npulse rate=" + pulse_rate + "\ntemprature=" + temprature;
        try {
            RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");

            System.out.println(hello.examination1(idfs.getText(),regbtn.getText(),gap.getText(), temprature, blood_presure,resparatory_rate,pulse_rate,head,ear,eyes,nose,mouth));
            JOptionPane.showMessageDialog(null, "CONTINUE",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
              new pysical_examintion2(display.getText(), displayp.getText(), infoid.getText()).setVisible(true);
        this.setVisible(false);

        } catch (NotBoundException e) {
            System.out.println("Clinicalclient not bound exception:" + e);
            // lbl.setText("Clinicalclient not bound exception:" +e.getMessage());
        } catch (Exception e) {
            System.out.println("HelloClient exception:" + e);
        }



    }//GEN-LAST:event_regbtnActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try {
            RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");

            String fetch[] = new String[5000];
            fetch = hello.Update_examination1();
            int c = fetch.length;
            int i = 0, j = 0, idx = 0;
            if (c >= 1) {
                while (i < c) {
                    infoid.setText(fetch[0]);
                  //  gap.setText(fetch[9]);
                    String x = (fetch[3]);
//                          int len = x.length();
//                            char[] cc = x.toCharArray();
//                            for (int h = 0; h < len - 2; h = h + 3) {
//                                char temp = cc[h];
//                                cc[h] = cc[h + 2];
//                                cc[h + 2] = temp;
//                            }
//                             x = String.valueOf(cc);
                    String y = (fetch[4]);
                    
//                         cc = y.toCharArray();
//                            for (int h = 0; h < len - 2; h = h + 3) {
//                                char temp = cc[h];
//                                cc[h] = cc[h + 2];
//                                cc[h + 2] = temp;
//                            }
//                             y= String.valueOf(cc);
                    String z = x + "   " + y;
                    pnm.setText(z);
//                    hd.setText(fetch[11]);
//                   String blood= (fetch[10]);
//                //   blood presure=
//                   String first="";
//                    int length = blood.length();
//        char[] ccx = blood.toCharArray();
//        for (int h = 0; h < 16; h = h + 1) {
//            first = first + ccx[h];
//        }
//                   
//                        bp.setText(first);
//                        
//                              String firsts="";
//        char[] ccxs = blood.toCharArray();
//        for (int h = 16; h < 36; h = h + 1) {
//            firsts = firsts + ccxs[h];
//        }
//                   
//                        rr.setText(firsts);
//                        
//                        
//                          String firstss="";
//        char[] ccxss = blood.toCharArray();
//        for (int h = 36; h < 50; h = h + 1) {
//            firstss = firstss + ccxs[h];
//        }
//                   
//                        pr.setText(firstss);
//                        
//                       String firstsss="";
//        char[] ccxsss = blood.toCharArray();
//        for (int h = 50; h < 64; h = h + 1) {
//            firstsss = firstsss + ccxss[h];
//        }
//                   
//                        tmp.setText(firstsss); 
                        
                    i++;
                }
//                    JOptionPane.showMessageDialog(null, "SUCCESSFULL", 
//                                              null,
//                                              JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "EMPTY",
                        null,
                        JOptionPane.PLAIN_MESSAGE);
            }
            // }
            infoid.setVisible(false);

        } catch (NotBoundException e) {
            System.out.println("Clinicalclient not bound exception:" + e);
            // lbl.setText("Clinicalclient not bound exception:" +e.getMessage());
        } catch (Exception e) {
            System.out.println("HelloClient exception:" + e);
        }





    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
            RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");

            String fetch[] = new String[5000];
            fetch = hello.Update_examination1(idfs.getText());
            int c = fetch.length;
            int i = 0, j = 0, idx = 0;
            if (c >= 1) {
                if(regbtn.getText().equals("REGISTER"))
                {
                    regbtn.setText("UPDATE");
                }
               
                while (i < c) {
                    infoid.setText(fetch[0]);
                   gap.setText(fetch[10]);
                       pr.setText(fetch[13]);
                       bp.setText(fetch[11]);
                       rr.setText(fetch[12]);
                       tmp.setText(fetch[14]);
                       
                       
                       
                        hd.setText(fetch[15]);
                       er.setText(fetch[16]);
                       eye.setText(fetch[17]);
                       ns.setText(fetch[18]);
                       mth.setText(fetch[19]);
                      // pr.setText(fetch[13]);
                      // bp.setText(fetch[11]);
                    String x = (fetch[3]);
//                          int len = x.length();
//                            char[] cc = x.toCharArray();
//                            for (int h = 0; h < len - 2; h = h + 3) {
//                                char temp = cc[h];
//                                cc[h] = cc[h + 2];
//                                cc[h + 2] = temp;
//                            }
//                             x = String.valueOf(cc);
                    String y = (fetch[4]);
                    
//                         cc = y.toCharArray();
//                            for (int h = 0; h < len - 2; h = h + 3) {
//                                char temp = cc[h];
//                                cc[h] = cc[h + 2];
//                                cc[h + 2] = temp;
//                            }
//                             y= String.valueOf(cc);
                    String z = x + "   " + y;
                    pnm.setText(z);
//                    hd.setText(fetch[11]);
//                   String blood= (fetch[10]);
//                //   blood presure=
//                   String first="";
//                    int length = blood.length();
//        char[] ccx = blood.toCharArray();
//        for (int h = 0; h < 16; h = h + 1) {
//            first = first + ccx[h];
//        }
//                   
//                        bp.setText(first);
//                        
//                              String firsts="";
//        char[] ccxs = blood.toCharArray();
//        for (int h = 16; h < 36; h = h + 1) {
//            firsts = firsts + ccxs[h];
//        }
//                   
//                        rr.setText(firsts);
//                        
//                        
//                          String firstss="";
//        char[] ccxss = blood.toCharArray();
//        for (int h = 36; h < 50; h = h + 1) {
//            firstss = firstss + ccxs[h];
//        }
//                   
//                        pr.setText(firstss);
//                        
//                       String firstsss="";
//        char[] ccxsss = blood.toCharArray();
//        for (int h = 50; h < 64; h = h + 1) {
//            firstsss = firstsss + ccxss[h];
//        }
//                   
//                        tmp.setText(firstsss); 
                        
                    i++;
                }
//                    JOptionPane.showMessageDialog(null, "SUCCESSFULL", 
//                                              null,
//                                              JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "EMPTY",
                        null,
                        JOptionPane.PLAIN_MESSAGE);
            }
            // }
            infoid.setVisible(false);

        } catch (NotBoundException e) {
            System.out.println("Clinicalclient not bound exception:" + e);
            // lbl.setText("Clinicalclient not bound exception:" +e.getMessage());
        } catch (Exception e) {
            System.out.println("HelloClient exception:" + e);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void prKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prKeyTyped
          char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                || c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "pulse rate must be number",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            //gettoolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_prKeyTyped

    private void bpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bpKeyTyped
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                || c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "blood presure must be number",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            //gettoolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_bpKeyTyped

    private void rrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rrKeyTyped
                  char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                || c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "resparatory rate must be number",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            //gettoolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_rrKeyTyped

    private void tmpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tmpKeyTyped
              char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                || c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "tempreture must be number",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            //gettoolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tmpKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pysical_examintion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pysical_examintion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pysical_examintion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pysical_examintion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pysical_examintion("", "", "").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bp;
    private javax.swing.JLabel display;
    private javax.swing.JLabel displayp;
    private javax.swing.JTextArea er;
    private javax.swing.JTextArea eye;
    private javax.swing.JTextArea gap;
    private javax.swing.JTextArea hd;
    private javax.swing.JTextField idfs;
    private javax.swing.JLabel infoid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextArea mth;
    private javax.swing.JTextArea ns;
    private javax.swing.JTextField pnm;
    private javax.swing.JTextField pr;
    private javax.swing.JButton regbtn;
    private javax.swing.JTextField rr;
    private javax.swing.JTextField tmp;
    // End of variables declaration//GEN-END:variables
}
