
import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gech
 */
public class drug_providing_info_registration extends javax.swing.JFrame {

    /**
     * Creates new form drug_providing_info_registration
     */
    private static final String voicename = "kevin16";

    public drug_providing_info_registration(String x, String y) {
        initComponents();
        display.setText(x);
        displayp.setText(y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel26 = new javax.swing.JLabel();
        strgth = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        drgnm = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        fqncy = new javax.swing.JTextField();
        unt = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        qntty = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        untc = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cmnt = new javax.swing.JTextArea();
        call = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rmnm = new javax.swing.JComboBox();
        pn = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        callagain = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        dsg = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        display = new javax.swing.JLabel();
        displayp = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1112, 693));
        setPreferredSize(new java.awt.Dimension(1112, 693));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel26.setText("FOR HOW LONG");
        jDesktopPane1.add(jLabel26);
        jLabel26.setBounds(30, 310, 160, 22);

        strgth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strgthActionPerformed(evt);
            }
        });
        jDesktopPane1.add(strgth);
        strgth.setBounds(220, 310, 260, 30);

        age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageActionPerformed(evt);
            }
        });
        jDesktopPane1.add(age);
        age.setBounds(220, 230, 260, 30);

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel27.setText("AGE");
        jDesktopPane1.add(jLabel27);
        jLabel27.setBounds(30, 230, 150, 22);

        drgnm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drgnmActionPerformed(evt);
            }
        });
        jDesktopPane1.add(drgnm);
        drgnm.setBounds(220, 270, 260, 30);

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel30.setText("FEQUENCY");
        jDesktopPane1.add(jLabel30);
        jLabel30.setBounds(500, 140, 120, 20);
        jDesktopPane1.add(fqncy);
        fqncy.setBounds(630, 130, 270, 30);

        unt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                untActionPerformed(evt);
            }
        });
        jDesktopPane1.add(unt);
        unt.setBounds(630, 210, 270, 40);

        jLabel31.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel31.setText("UNIT");
        jDesktopPane1.add(jLabel31);
        jLabel31.setBounds(500, 220, 120, 22);

        jLabel32.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel32.setText("QUANTITY");
        jDesktopPane1.add(jLabel32);
        jLabel32.setBounds(500, 260, 120, 22);
        jDesktopPane1.add(qntty);
        qntty.setBounds(630, 260, 270, 30);

        jLabel33.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel33.setText("UNIT COST");
        jDesktopPane1.add(jLabel33);
        jLabel33.setBounds(500, 300, 120, 22);
        jDesktopPane1.add(untc);
        untc.setBounds(630, 300, 270, 30);

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel34.setText("COMMENT");
        jDesktopPane1.add(jLabel34);
        jLabel34.setBounds(500, 340, 120, 22);

        jButton1.setText("REGISTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton1);
        jButton1.setBounds(240, 400, 110, 40);

        jLabel35.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel35.setText("DRUG NAME");
        jDesktopPane1.add(jLabel35);
        jLabel35.setBounds(30, 270, 150, 22);

        cmnt.setColumns(20);
        cmnt.setRows(5);
        jScrollPane1.setViewportView(cmnt);

        jDesktopPane1.add(jScrollPane1);
        jScrollPane1.setBounds(630, 340, 270, 40);

        call.setText("CALLING");
        call.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callActionPerformed(evt);
            }
        });
        jDesktopPane1.add(call);
        call.setBounds(370, 400, 100, 40);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("DRUG PROVIDING INFORMATION REGISTRATION PAGE");
        jDesktopPane1.add(jLabel1);
        jLabel1.setBounds(100, 20, 496, 30);

        rmnm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PLEASE SELECT ROOM NUMBER", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        rmnm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmnmActionPerformed(evt);
            }
        });
        jDesktopPane1.add(rmnm);
        rmnm.setBounds(540, 60, 210, 30);

        pn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pnActionPerformed(evt);
            }
        });
        jDesktopPane1.add(pn);
        pn.setBounds(220, 180, 260, 30);

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel24.setText("PATIENT NAME");
        jDesktopPane1.add(jLabel24);
        jLabel24.setBounds(30, 190, 158, 29);
        jDesktopPane1.add(id);
        id.setBounds(220, 140, 260, 30);

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel25.setText("ID NUMBER");
        jDesktopPane1.add(jLabel25);
        jLabel25.setBounds(30, 140, 158, 29);

        callagain.setText("CALLING AGAIN");
        callagain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callagainActionPerformed(evt);
            }
        });
        jDesktopPane1.add(callagain);
        callagain.setBounds(483, 400, 120, 40);

        jLabel36.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel36.setText("DOSSAGE");
        jDesktopPane1.add(jLabel36);
        jLabel36.setBounds(500, 180, 120, 20);
        jDesktopPane1.add(dsg);
        dsg.setBounds(630, 170, 270, 30);
        jDesktopPane1.add(jPanel1);
        jPanel1.setBounds(10, 10, 930, 460);

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 950, 480));
        getContentPane().add(display, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, 100, 20));
        getContentPane().add(displayp, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, 130, 20));

        jLabel2.setText("FE");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, 150));

        jMenu1.setText("BACK          ");

        jMenu2.setText("BACK");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pnActionPerformed

    private void drgnmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drgnmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drgnmActionPerformed

    private void untActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_untActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_untActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Mainclass ob;
            ob = new Mainclass();
            ob.id_number = id.getText();
            ob.age = age.getText();
            String drugname = drgnm.getText();
            ob.strength = strgth.getText();
            ob.dose = fqncy.getText();
            String unit = unt.getText();
            ob.quantity = qntty.getText();
            String unitcost = untc.getText();
            String comment = cmnt.getText();
            try {
                RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");
                if (ob.id_number.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASW ENTER ID NUMBER",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    id.setBorder(null);
                    id.setHighlighter(null);
                } 
                                else if ((id.getText().length() < 7) || (id.getText().length() > 7)) {
                                JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF ID NUMBER",
                                        null,
                                        JOptionPane.QUESTION_MESSAGE);
                                id.setBorder(null);
                                id.setHighlighter(null);
                                id.setText("");
                            } 
                else if (ob.age.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER AGE",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    age.setBorder(null);
                    age.setHighlighter(null);
                } else if ((age.getText().length() < 1) || (age.getText().length() > 3)) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF AGE",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    age.setBorder(null);
                    age.setHighlighter(null);
                    age.setText("");
                } else if (drugname.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER DRUG NAME",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    drgnm.setBorder(null);
                    drgnm.setHighlighter(null);
                } else if ((drgnm.getText().length() < 2) || (drgnm.getText().length() > 30)) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF DRUG NAME",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    drgnm.setBorder(null);
                    drgnm.setHighlighter(null);
                    drgnm.setText("");
                } else if (ob.strength.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER STRENGTH",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    strgth.setBorder(null);
                    strgth.setHighlighter(null);
                } else if ((strgth.getText().length() < 2) || (strgth.getText().length() > 30)) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF  STRENGTH",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    strgth.setBorder(null);
                    strgth.setHighlighter(null);
                    strgth.setText("");
                } else if (fqncy.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER DOSAGE",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    fqncy.setBorder(null);
                    fqncy.setHighlighter(null);
                } else if ((fqncy.getText().length() < 2) || (fqncy.getText().length() > 30)) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF  DOSAGE",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    fqncy.setBorder(null);
                    fqncy.setHighlighter(null);
                    fqncy.setText("");
                } else if (unt.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER UNIT",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    unt.setBorder(null);
                    unt.setHighlighter(null);
                } else if ((unt.getText().length() < 2) || (unt.getText().length() > 10)) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF  UNIT",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    unt.setBorder(null);
                    unt.setHighlighter(null);
                    unt.setText("");
                } else if (qntty.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER QUANTITY",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    qntty.setBorder(null);
                    qntty.setHighlighter(null);
                } else if ((qntty.getText().length() < 1) || (qntty.getText().length() > 10)) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF  QUANTITY",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    qntty.setBorder(null);
                    qntty.setHighlighter(null);
                    qntty.setText("");
                } else if (untc.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER UNIT COST",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    untc.setBorder(null);
                    untc.setHighlighter(null);
                } else if ((untc.getText().length() < 1) || (untc.getText().length() > 10)) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF  UNIT COST",
                            null,
                            JOptionPane.QUESTION_MESSAGE);
                    untc.setText("");
                } else {
                    int countdruginfo=hello.drug_pro_info(id.getText());
if(countdruginfo<1)
{
    JOptionPane.showMessageDialog(null, "THIS PATIENT IS NOT PRESCRIBE",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
}
else
{
    

                    System.out.println(hello.drug_pro_info(display.getText(), displayp.getText(), ob.id_number, ob.age, drugname, ob.strength, ob.dose, unit, ob.quantity, unitcost, comment));
                    JOptionPane.showMessageDialog(null, "SUCCESSFULLY  PROVIED",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
}
                }
            } catch (NotBoundException e) {
                System.out.println("Clinicalclient not bound exception:" + e);
                // lbl.setText("Clinicalclient not bound exception:" +e.getMessage());
            } catch (Exception e) {
                System.out.println("HelloClient exception:" + e);
            }

        } catch (RemoteException ex) {
            Logger.getLogger(Register_pat_info.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageActionPerformed

    private void callActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callActionPerformed

        try {
            Mainclass ob = new Mainclass();
            // ob.id_number=id.getText();

            RMIInterface hello;
            try {
                hello = (RMIInterface) Naming.lookup("//localhost/clinical");
                if (rmnm.getSelectedItem().toString() == "PLEASE SELECT ROOM NUMBER") {
                    JOptionPane.showMessageDialog(null, "PLEASE SELECT ROOM NUMBER",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                } else {
                    int countinvestigation = hello.calling_for_drug_pro_info_count(call.getText());



                    if (countinvestigation >= 1) {
                        String fetch[] = new String[5000];
                        fetch = hello.calling_for_drug_pro_info(rmnm.getSelectedItem().toString(), call.getText());
                        int c = fetch.length;
                        int i = 0, j = 0, idx = 0;

                        if (c >= 1) {
                            while (i < c) {
                                id.setText(fetch[1]);
                                String midle_name = (fetch[3]);
                                String last_name = (fetch[4]);
                                drgnm.setText(fetch[10]);
                                strgth.setText((fetch[13]));
                                qntty.setText((fetch[14]));
                                fqncy.setText((fetch[12]));
                                 dsg.setText((fetch[11]));
                                pn.setText(midle_name + "  " + last_name);
                                i++;
                            }
                        }
                        int m = 0;
                        for (m = 0; m <= 2; m++) {
                            Voice voice;
                            VoiceManager vm = VoiceManager.getInstance();
                            voice = vm.getVoice(voicename);
                            voice.allocate();
                            try {
                                voice.speak(id.getText() + " in room number" + rmnm.getSelectedItem().toString());
                            } catch (Exception e) {
                                e.getCause();
                            }
                        }
                        JOptionPane.showMessageDialog(null, "YOU CAN CONTINUE",
                                null,
                                JOptionPane.PLAIN_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "PLEASE WAIT",
                                null,
                                JOptionPane.PLAIN_MESSAGE);
                    }

                }
            } catch (NotBoundException ex) {
                Logger.getLogger(Register_patient_lab_result.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Register_patient_lab_result.class.getName()).log(Level.SEVERE, null, ex);
            }
            //  String id_number,String history_id,String opo,String lab_id,String reporter_name,String lab_test_result,String remark
            //  System.out.println(hello.investigation_record(ob.id_number/*,ob.card_number,ob.address,ob.age*/,ob.history_id,ob.requested_first_name,ob.requested_last_name,ob.opo,ob.stool_examination));
            // TODO add your handling code here:
        } catch (RemoteException ex) {
            Logger.getLogger(Register_patient_lab_result.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_callActionPerformed

    private void rmnmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmnmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rmnmActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        new Pharmacist(display.getText(), displayp.getText()).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void callagainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callagainActionPerformed
        try {
            Mainclass ob = new Mainclass();
            // ob.id_number=id.getText();

            RMIInterface hello;
            try {
                hello = (RMIInterface) Naming.lookup("//localhost/clinical");
                if (rmnm.getSelectedItem().toString() == "PLEASE SELECT ROOM NUMBER") {
                    JOptionPane.showMessageDialog(null, "PLEASE SELECT ROOM NUMBER",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                } else {
                    int countinvestigation = hello.calling_for_drug_pro_info_count(callagain.getText());



                    if (countinvestigation >= 1) {
                        String fetch[] = new String[5000];
                        fetch = hello.calling_for_drug_pro_info(rmnm.getSelectedItem().toString(), callagain.getText());
                        int c = fetch.length;
                        int i = 0, j = 0, idx = 0;

                        if (c >= 1) {
                            while (i < c) {
                                id.setText(fetch[1]);
                                String midle_name = (fetch[3]);
                                String last_name = (fetch[4]);

                                drgnm.setText(fetch[10]);
                                strgth.setText((fetch[13]));
                                qntty.setText((fetch[14]));

                                drgnm.setText(fetch[10]);
                                strgth.setText((fetch[13]));
                                qntty.setText((fetch[14]));

                                dsg.setText((fetch[11]));
                                fqncy.setText((fetch[12]));
                                pn.setText(midle_name + "  " + last_name);
                                i++;
                            }
                        }
                        int m = 0;
                        for (m = 0; m <= 2; m++) {
                            Voice voice;
                            VoiceManager vm = VoiceManager.getInstance();
                            voice = vm.getVoice(voicename);
                            voice.allocate();
                            try {
                                voice.speak(id.getText() + " in room number" + rmnm.getSelectedItem().toString());
                            } catch (Exception e) {
                                e.getCause();
                            }
                        }
                        JOptionPane.showMessageDialog(null, "YOU CAN CONTINUE",
                                null,
                                JOptionPane.PLAIN_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "PLEASE WAIT",
                                null,
                                JOptionPane.PLAIN_MESSAGE);
                    }

                }
            } catch (NotBoundException ex) {
                Logger.getLogger(Register_patient_lab_result.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Register_patient_lab_result.class.getName()).log(Level.SEVERE, null, ex);
            }
            //  String id_number,String history_id,String opo,String lab_id,String reporter_name,String lab_test_result,String remark
            //  System.out.println(hello.investigation_record(ob.id_number/*,ob.card_number,ob.address,ob.age*/,ob.history_id,ob.requested_first_name,ob.requested_last_name,ob.opo,ob.stool_examination));
            // TODO add your handling code here:
        } catch (RemoteException ex) {
            Logger.getLogger(Register_patient_lab_result.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_callagainActionPerformed

    private void strgthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strgthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_strgthActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(drug_providing_info_registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(drug_providing_info_registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(drug_providing_info_registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(drug_providing_info_registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new drug_providing_info_registration("", "").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age;
    private javax.swing.JButton call;
    private javax.swing.JButton callagain;
    private javax.swing.JTextArea cmnt;
    private javax.swing.JLabel display;
    private javax.swing.JLabel displayp;
    private javax.swing.JTextField drgnm;
    private javax.swing.JTextField dsg;
    private javax.swing.JTextField fqncy;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pn;
    private javax.swing.JTextField qntty;
    private javax.swing.JComboBox rmnm;
    private javax.swing.JTextField strgth;
    private javax.swing.JTextField unt;
    private javax.swing.JTextField untc;
    // End of variables declaration//GEN-END:variables
}
