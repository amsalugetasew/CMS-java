
import java.awt.event.KeyEvent;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gech
 */
public class Member extends javax.swing.JFrame {

    /**
     * Creates new form Member
     */
    public Member(String x, String y) {
        initComponents();
        display.setText(x);
        displayp.setText(y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        age = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pnbr = new javax.swing.JTextField();
        addrss = new javax.swing.JTextField();
        eml = new javax.swing.JTextField();
        prfsn = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        sex = new javax.swing.JComboBox();
        ln = new javax.swing.JTextField();
        mn = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fn = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        display = new javax.swing.JLabel();
        displayp = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1112, 693));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("  PROFFESSION");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 220, 100, 28));

        jButton1.setBackground(new java.awt.Color(51, 102, 255));
        jButton1.setText("REGISTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, 94, 35));

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageActionPerformed(evt);
            }
        });
        age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ageKeyTyped(evt);
            }
        });
        jDesktopPane1.add(age);
        age.setBounds(520, 240, 230, 36);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("  AGE");
        jDesktopPane1.add(jLabel5);
        jLabel5.setBounds(400, 250, 50, 28);

        pnbr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pnbrKeyTyped(evt);
            }
        });
        jDesktopPane1.add(pnbr);
        pnbr.setBounds(520, 40, 230, 28);

        addrss.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addrssKeyTyped(evt);
            }
        });
        jDesktopPane1.add(addrss);
        addrss.setBounds(520, 140, 230, 33);

        eml.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emlKeyTyped(evt);
            }
        });
        jDesktopPane1.add(eml);
        eml.setBounds(520, 90, 230, 31);

        prfsn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PROFFESSION", "RECEPTION", "DOCTOR/NURSE", "PHARMACIST", "LABORATORIST", "MANAGER" }));
        prfsn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                prfsnItemStateChanged(evt);
            }
        });
        prfsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prfsnActionPerformed(evt);
            }
        });
        jDesktopPane1.add(prfsn);
        prfsn.setBounds(520, 190, 230, 40);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("  FIRST NAME ");
        jDesktopPane1.add(jLabel1);
        jLabel1.setBounds(40, 90, 100, 39);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText(" LAST NAME");
        jDesktopPane1.add(jLabel3);
        jLabel3.setBounds(50, 180, 90, 32);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("  SEX");
        jDesktopPane1.add(jLabel4);
        jLabel4.setBounds(50, 240, 60, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("  ADDRESS");
        jDesktopPane1.add(jLabel8);
        jLabel8.setBounds(400, 140, 84, 28);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("  EMAIL ");
        jDesktopPane1.add(jLabel7);
        jLabel7.setBounds(400, 90, 84, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("  PHONE NUMBER");
        jDesktopPane1.add(jLabel6);
        jLabel6.setBounds(400, 40, 113, 28);

        sex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT SEX", "MALE", "FEMALE" }));
        sex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexActionPerformed(evt);
            }
        });
        sex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sexKeyTyped(evt);
            }
        });
        jDesktopPane1.add(sex);
        sex.setBounds(180, 240, 220, 40);

        ln.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lnKeyTyped(evt);
            }
        });
        jDesktopPane1.add(ln);
        ln.setBounds(180, 180, 220, 34);

        mn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mnKeyTyped(evt);
            }
        });
        jDesktopPane1.add(mn);
        mn.setBounds(180, 130, 220, 31);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("  MIDLE NAME ");
        jDesktopPane1.add(jLabel2);
        jLabel2.setBounds(40, 130, 110, 33);

        fn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnActionPerformed(evt);
            }
        });
        fn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fnKeyTyped(evt);
            }
        });
        jDesktopPane1.add(fn);
        fn.setBounds(180, 90, 220, 31);

        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idKeyTyped(evt);
            }
        });
        jDesktopPane1.add(id);
        id.setBounds(180, 40, 220, 31);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("ID NUMBER");
        jDesktopPane1.add(jLabel10);
        jLabel10.setBounds(40, 40, 100, 39);

        jPanel1.setForeground(new java.awt.Color(51, 51, 51));
        jDesktopPane1.add(jPanel1);
        jPanel1.setBounds(10, 10, 760, 490);

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 780, 510));
        getContentPane().add(display, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 0, 100, 30));
        getContentPane().add(displayp, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, 100, 30));

        jMenu1.setText("BACK              ");

        jMenu2.setText("BACK");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        String x = s.format(d);
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        String time = sdf.format(d);







        try {
            Mainclass ob;
            ob = new Mainclass();
            //ob.id_number=id.getText();
            ob.first_name = fn.getText();
            ob.middle_name = mn.getText();
            ob.last_name = ln.getText();
            ob.age = age.getText();
            ob.sex = sex.getSelectedItem().toString();
            ob.email = eml.getText();
            ob.profssion = prfsn.getSelectedItem().toString();
            ob.phone_number = pnbr.getText();
            ob.address = addrss.getText();




            try {
                RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");
                if (age.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER AGE",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                } else if (age.getText().length() > 3 || age.getText().length() < 1) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF AGE",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                } else {
                    int fetch = (hello.memberjoin(id.getText(), ob.first_name, ob.middle_name, ob.last_name, ob.age, ob.sex, ob.phone_number, ob.email, ob.address, ob.profssion, x, time));
                    if (fetch < 1) {
                        JOptionPane.showMessageDialog(null, "now on  " + "  " + ob.profssion + "  " + ob.first_name + "    is member of the System",
                                null,
                                JOptionPane.PLAIN_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "YOU ARE ALREADY MEMBER OF THE SYSTEM",
                                null,
                                JOptionPane.PLAIN_MESSAGE);
                    }
                }
            } catch (NotBoundException e) {
                System.out.println("Clinicalclient not bound exception:" + e);
                JOptionPane.showMessageDialog(null, "Clinicalclient not bound exception:" + e.getMessage(), null,
                        JOptionPane.PLAIN_MESSAGE);
            } catch (Exception e) {
                System.out.println("HelloClient exception:" + e);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Register_pat_info.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        new Manager(display.getText(), displayp.getText()).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyTyped
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                || c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_SLASH) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "id number must be number",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            //gettoolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_idKeyTyped

    private void fnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnKeyTyped
        int i = evt.getKeyChar();
        if (id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER ID NUMBER",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (id.getText().length() > 7 || id.getText().length() < 7) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF ID NUMBER",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (!((Character.isAlphabetic(i)) || (i == KeyEvent.VK_SPACE) || (i == KeyEvent.VK_ENTER) || (i == KeyEvent.VK_BACK_SPACE) || (i == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "first name must be character",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            evt.consume();

        }
    }//GEN-LAST:event_fnKeyTyped

    private void mnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mnKeyTyped
        int i = evt.getKeyChar();
        if (fn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER FIRST NAME",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (fn.getText().length() > 15 || fn.getText().length() < 3) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF FIRST NAME",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (!((Character.isAlphabetic(i)) || (i == KeyEvent.VK_SPACE) || (i == KeyEvent.VK_ENTER) || (i == KeyEvent.VK_BACK_SPACE) || (i == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "middle name must be character",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            evt.consume();

        }
    }//GEN-LAST:event_mnKeyTyped

    private void lnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnKeyTyped
        int i = evt.getKeyChar();
        if (mn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER MIDDLE NAME",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (mn.getText().length() > 15 || mn.getText().length() < 3) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF MIDDLE NAME",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (!((Character.isAlphabetic(i)) || (i == KeyEvent.VK_SPACE) || (i == KeyEvent.VK_ENTER) || (i == KeyEvent.VK_BACK_SPACE) || (i == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "last name must be character",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            evt.consume();

        }
    }//GEN-LAST:event_lnKeyTyped

    private void addrssKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addrssKeyTyped
        int i = evt.getKeyChar();
        String dx = eml.getText();
        int cn = 0;
        String fivith_letter = "";
        int length = dx.length();
        char[] ccx = dx.toCharArray();
        for (int h = length - 10; h <= length - 1; h = h + 1) {
            fivith_letter = fivith_letter + ccx[h];
        }
        if (eml.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER E-MAIL",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (eml.getText().length() < 13 || eml.getText().length() > 30) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF E-MAIL",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (!(fivith_letter.equals("@yahoo.com") || (fivith_letter.equals("@gmail.com")))) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID  E-MAIL",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (!((Character.isAlphabetic(i)) || (i == KeyEvent.VK_SPACE) || (i == KeyEvent.VK_ENTER) || (i == KeyEvent.VK_BACK_SPACE) || (i == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "address must be character",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            evt.consume();

        }
    }//GEN-LAST:event_addrssKeyTyped

    private void ageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageKeyTyped
        char c = evt.getKeyChar();
        if (prfsn.getSelectedItem().toString().equals("PROFFESSION")) {
            JOptionPane.showMessageDialog(null, "PLEASE SELECT PROFFESSION",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                || c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "age must be number",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            //gettoolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_ageKeyTyped

    private void pnbrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pnbrKeyTyped
        char c = evt.getKeyChar();
        if (sex.getSelectedItem().toString().equals("SELECT SEX")) {
            JOptionPane.showMessageDialog(null, "PLEASE SELECT SEX",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                || c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == '+') || (c == KeyEvent.VK_SHIFT) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "phone number must be number",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            //gettoolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_pnbrKeyTyped

    private void emlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emlKeyTyped
        if (pnbr.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER PHONE NUMBER",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        } else if (!((pnbr.getText().length() == 10 || pnbr.getText().length() == 13))) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF PHONE NUMBER",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_emlKeyTyped

    private void sexKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sexKeyTyped
     
    }//GEN-LAST:event_sexKeyTyped

    private void prfsnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_prfsnItemStateChanged
     



    }//GEN-LAST:event_prfsnItemStateChanged

    private void sexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexActionPerformed
           if (ln.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER LAST NAME",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            sex.setSelectedItem("SELECT SEX");
            
           // evt.consume();
        } else if (ln.getText().length() > 15 || ln.getText().length() < 3) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF LAST NAME",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
            sex.setSelectedItem("SELECT SEX");
          //  evt.consume();
        }
    }//GEN-LAST:event_sexActionPerformed

    private void prfsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prfsnActionPerformed
          if (addrss.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER ADDRESS",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
           // evt.getItem().equals("PROFFESSION");
            prfsn.setSelectedItem("PROFFESSION");//.getSelectedItem().toString().equals("PROFFESSION");
        } else if (addrss.getText().length() < 3 || addrss.getText().length() > 30) {
            JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID LENGTH OF ADDRESS",
                    null,
                    JOptionPane.PLAIN_MESSAGE);
             prfsn.setSelectedItem("PROFFESSION");
            
        }
    }//GEN-LAST:event_prfsnActionPerformed

    private void fnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Member("", "").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addrss;
    private javax.swing.JTextField age;
    private javax.swing.JLabel display;
    private javax.swing.JLabel displayp;
    private javax.swing.JTextField eml;
    private javax.swing.JTextField fn;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField ln;
    private javax.swing.JTextField mn;
    private javax.swing.JTextField pnbr;
    private javax.swing.JComboBox prfsn;
    private javax.swing.JComboBox sex;
    // End of variables declaration//GEN-END:variables
}
