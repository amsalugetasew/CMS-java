
import java.awt.event.KeyEvent;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gech
 */
public class update_patient_information extends javax.swing.JFrame {

    /**
     * Creates new form update_patient_information
     */
    public update_patient_information(String x, String y) {
        initComponents();
        display.setText(x);
        displayp.setText(y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane2 = new javax.swing.JDesktopPane();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        statues = new javax.swing.JComboBox();
        addrss = new javax.swing.JTextField();
        rlgn = new javax.swing.JComboBox();
        occpn = new javax.swing.JTextField();
        sex = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        age = new javax.swing.JTextField();
        ln = new javax.swing.JTextField();
        mn = new javax.swing.JTextField();
        fn = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        dormnum = new javax.swing.JComboBox();
        blocknm = new javax.swing.JTextField();
        dep = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        displayp = new javax.swing.JLabel();
        display = new javax.swing.JLabel();
        infoid = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1112, 693));
        setPreferredSize(new java.awt.Dimension(1112, 693));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane2.setBackground(new java.awt.Color(204, 204, 204));
        jDesktopPane2.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jDesktopPane2.add(jButton1);
        jButton1.setBounds(350, 440, 96, 35);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("   STATUES");
        jDesktopPane2.add(jLabel6);
        jLabel6.setBounds(30, 370, 100, 25);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("   ADDRESS");
        jDesktopPane2.add(jLabel12);
        jLabel12.setBounds(20, 320, 90, 25);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("  RELIGION  ");
        jDesktopPane2.add(jLabel8);
        jLabel8.setBounds(380, 200, 100, 29);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("  OCCUPATION ");
        jDesktopPane2.add(jLabel7);
        jLabel7.setBounds(380, 140, 120, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("  SEX");
        jDesktopPane2.add(jLabel5);
        jLabel5.setBounds(390, 90, 103, 22);

        statues.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT STATUES", "NORMAL", "EMERGENCY" }));
        statues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statuesActionPerformed(evt);
            }
        });
        jDesktopPane2.add(statues);
        statues.setBounds(150, 360, 230, 40);
        jDesktopPane2.add(addrss);
        addrss.setBounds(150, 310, 230, 40);

        rlgn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ORTHODOX CRISTIAN", "PROTESTANT", "MUSLIM", " " }));
        jDesktopPane2.add(rlgn);
        rlgn.setBounds(520, 190, 240, 40);
        jDesktopPane2.add(occpn);
        occpn.setBounds(520, 130, 240, 40);

        sex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MALE", "FEMALE" }));
        sex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexActionPerformed(evt);
            }
        });
        jDesktopPane2.add(sex);
        sex.setBounds(520, 80, 240, 40);

        jButton2.setText("SEARCH FOR UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jDesktopPane2.add(jButton2);
        jButton2.setBounds(400, 30, 240, 40);
        jDesktopPane2.add(age);
        age.setBounds(150, 260, 230, 40);
        jDesktopPane2.add(ln);
        ln.setBounds(150, 200, 230, 40);
        jDesktopPane2.add(mn);
        mn.setBounds(150, 140, 230, 40);

        fn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fnMousePressed(evt);
            }
        });
        fn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnActionPerformed(evt);
            }
        });
        jDesktopPane2.add(fn);
        fn.setBounds(150, 90, 230, 40);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText(" ID NUMBER");
        jDesktopPane2.add(jLabel9);
        jLabel9.setBounds(30, 30, 110, 29);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("   FIRST NAME");
        jDesktopPane2.add(jLabel1);
        jLabel1.setBounds(13, 100, 130, 28);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("   MIDLE NAME");
        jDesktopPane2.add(jLabel2);
        jLabel2.setBounds(20, 140, 110, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("   LAST NAME");
        jDesktopPane2.add(jLabel3);
        jLabel3.setBounds(20, 200, 110, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText(" AGE");
        jDesktopPane2.add(jLabel4);
        jLabel4.setBounds(30, 260, 90, 33);

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idKeyTyped(evt);
            }
        });
        jDesktopPane2.add(id);
        id.setBounds(150, 30, 230, 40);

        dormnum.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DORMETRY NUMBER", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", "218", "300", "301", "302", "303", "304", "305", "306", "307", "308", "309", "310", "311", "312", "313", "314", "315", "316", "317", "318", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418" }));
        dormnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dormnumActionPerformed(evt);
            }
        });
        jDesktopPane2.add(dormnum);
        dormnum.setBounds(520, 350, 240, 40);

        blocknm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blocknmActionPerformed(evt);
            }
        });
        jDesktopPane2.add(blocknm);
        blocknm.setBounds(520, 300, 240, 40);
        jDesktopPane2.add(dep);
        dep.setBounds(520, 250, 240, 40);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("DEPARTMENT");
        jDesktopPane2.add(jLabel10);
        jLabel10.setBounds(390, 260, 110, 30);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("BLOCK NO");
        jDesktopPane2.add(jLabel13);
        jLabel13.setBounds(390, 310, 90, 30);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("DORMETERY");
        jDesktopPane2.add(jLabel14);
        jLabel14.setBounds(390, 360, 100, 25);
        jDesktopPane2.add(jPanel1);
        jPanel1.setBounds(10, 10, 820, 480);

        getContentPane().add(jDesktopPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 840, 500));
        getContentPane().add(displayp, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 0, 120, 30));
        getContentPane().add(display, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 0, 130, 30));
        getContentPane().add(infoid, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 580, 100, 20));

        jMenu1.setText("BACK                                           ");

        jMenu3.setText("BACK");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu4.setText("LOGOUT            ");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Mainclass ob = new Mainclass();
            ob.id_number = id.getText();
            ob.first_name = fn.getText();
            ob.middle_name = mn.getText();
            ob.last_name = ln.getText();
            ob.age = age.getText();
            ob.sex = sex.getSelectedItem().toString();
            ob.religion = rlgn.getSelectedItem().toString();
            ob.occupation = occpn.getText();
            ob.address = addrss.getText();
            ob.department = dep.getText();
            ob.block_number = blocknm.getText();
            String statue = statues.getSelectedItem().toString();
            ob.dormetry_number = dormnum.getSelectedItem().toString();
            try {
                if (statues.getSelectedItem().toString() == "SELECT STATUES") {
                    JOptionPane.showMessageDialog(null, "PEASE SELECT STATUES",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                } else if (dormnum.getSelectedItem().toString() == "DORMETRY NUMBER") {
                    JOptionPane.showMessageDialog(null, "PEASE SELECT DORMETRY NUMBER",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                } else {
                    
                RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");
                    System.out.println(hello.update_patient_information(ob.department, ob.block_number, ob.dormetry_number, infoid.getText(), ob.id_number, ob.first_name, ob.middle_name, ob.last_name, ob.age, ob.sex, ob.occupation, ob.religion, ob.address, statue));
                    JOptionPane.showMessageDialog(null, "SUCCESSFULLY INSERETED",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                }

            } catch (NotBoundException e) {
                JOptionPane.showMessageDialog(null, "Clinicalclient not bound exception:" + e,
                        null,
                        JOptionPane.PLAIN_MESSAGE);
                JOptionPane.showMessageDialog(null, "Clinicalclient not bound exception:" + e.getMessage(),
                        null,
                        JOptionPane.PLAIN_MESSAGE);
            } catch (Exception e) {
                System.out.println("HelloClient exception:" + e);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Register_pat_info.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void statuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statuesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statuesActionPerformed

    private void sexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Mainclass ob = new Mainclass();
            // String statue= statues.getSelectedItem().toString();
            ob.id_number = id.getText();
            // ob.age=age.getText();
            try {
                RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");
                if (id.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER ID NUMBER",
                            null,
                            JOptionPane.PLAIN_MESSAGE);
                } else {
                    String fetch[] = new String[5000];
                    fetch = hello.search_patient_info(ob.id_number);
                    int c = fetch.length;
                    int i = 0, j = 0, idx = 0;
                    if (c >= 1) {
                        while (i < c) {
                            infoid.setText(fetch[0]);


                            dep.setText(fetch[16]);
                            String sexs = (fetch[7]);
                            if (sexs.equals("MALE")) {
                                sex.setSelectedItem("MALE");
                            } else {
                                sex.setSelectedItem("FEMALE");
                            }

                             String stats = (fetch[13]);
                            if (stats.equals("NORMAL")) {
                                statues.setSelectedItem("NORMAL");
                            } else {
                                statues.setSelectedItem("EMERGENCY");
                            }
                           
                             String religion = (fetch[18]);
                            if (religion.equals("PROTESTANT")) {
                                rlgn.setSelectedItem("OPROTESTANT");
                            }
                            if (religion.equals("MUSLIM")) {
                                rlgn.setSelectedItem("MUSLIM");
                            } 
                            else {
                                rlgn.setSelectedItem("ORTHODOX CRISTIAN");
                            }

                            


                            blocknm.setText(fetch[17]);

                            String address = fetch[10];

                            addrss.setText(address);
                            String occupation = fetch[8];



                            occpn.setText(occupation);



                            String lastname = fetch[5];

                            ln.setText(lastname);





                            String middlename = fetch[4];


                            mn.setText(middlename);





                            String id_number = fetch[2];


                            id.setText(id_number);






                            age.setText(fetch[6]);
                            id.setText(fetch[2]);





                            String first_name = fetch[3];


                            fn.setText(first_name);
                            i++;
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "THERE IS NO  ID NUMBER=" + id.getText() + "  IN PATIENT INFORMATION TABLE",
                                null,
                                JOptionPane.PLAIN_MESSAGE);
                    }
                }
            } catch (NotBoundException e) {
                JOptionPane.showMessageDialog(null, "Clinicalclient not bound exception:" + e,
                        null,
                        JOptionPane.PLAIN_MESSAGE);
                JOptionPane.showMessageDialog(null, "Clinicalclient not bound exception:" + e.getMessage(),
                        null,
                        JOptionPane.PLAIN_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "HelloClient exception:" + e,
                        null,
                        JOptionPane.PLAIN_MESSAGE);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Register_pat_info.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void fnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fnMousePressed
        //          JOptionPane.showMessageDialog(null,"PLEASE CLICK SEARCH BUTTON",
        //                    null,
        //                    JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_fnMousePressed

    private void fnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        infoid.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        new Reception(display.getText(), displayp.getText()).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void dormnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dormnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dormnumActionPerformed

    private void blocknmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blocknmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blocknmActionPerformed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
       new LOGIN().setVisible(true);
       this.setVisible(false);
    }//GEN-LAST:event_jMenu4MouseClicked

    private void idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyTyped
            char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                || c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_SLASH) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "id number must be number",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            //gettoolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_idKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(update_patient_information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(update_patient_information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(update_patient_information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(update_patient_information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new update_patient_information("", "").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addrss;
    private javax.swing.JTextField age;
    private javax.swing.JTextField blocknm;
    private javax.swing.JTextField dep;
    private javax.swing.JLabel display;
    private javax.swing.JLabel displayp;
    private javax.swing.JComboBox dormnum;
    private javax.swing.JTextField fn;
    private javax.swing.JTextField id;
    private javax.swing.JLabel infoid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField ln;
    private javax.swing.JTextField mn;
    private javax.swing.JTextField occpn;
    private javax.swing.JComboBox rlgn;
    private javax.swing.JComboBox sex;
    private javax.swing.JComboBox statues;
    // End of variables declaration//GEN-END:variables
}
