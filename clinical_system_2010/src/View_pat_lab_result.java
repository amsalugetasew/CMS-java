
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.text.MessageFormat;
import javax.swing.JTable;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gech
 */
public class View_pat_lab_result extends javax.swing.JFrame {

    /**
     * Creates new form View_pat_lab_result
     */
    public View_pat_lab_result(String x,String y) {
        initComponents();
        display.setText(x);
          displayp.setText(y);  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        pttable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        cmd_print = new javax.swing.JButton();
        display = new javax.swing.JLabel();
        displayp = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1112, 693));
        setPreferredSize(new java.awt.Dimension(1112, 693));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "LAB ID", "ID NUMBER", "CARD NUMBER", "HISTORY ID", "PATIENT NAME", "SEX", "COLLECTION DATE", "COLLECTION TIME", "LAB TEST", "REMARK", "REPORTER NAME", "SERVIECES", "CALLED"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(pttable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 1000, 340));

        jButton1.setText("VIEW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 432, 77, -1));

        cmd_print.setText("PRINT");
        cmd_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_printActionPerformed(evt);
            }
        });
        getContentPane().add(cmd_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, 90, 30));
        getContentPane().add(display, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 0, 110, 20));
        getContentPane().add(displayp, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 0, 120, 20));

        jMenu1.setText("BACK                  ");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        //       try
        //       {
            // Object x=pttable;
            // int i=0,j=0,indx=0;
            int k;

            try
            {
                Mainclass ob = new Mainclass();
                //ob.card_number;
                //    ResultSet rs;
                //ArrayList fetch = new ArrayList();
                RMIInterface hello=(RMIInterface)
                Naming.lookup("//localhost/clinical");
         //       Array array[]=new Array [1000];

                // String test=hello.view_pat_information();
                String fetch[]=new String[5000];
                fetch =  hello.view_lab_result();
                //   String x=hello.view_pat_information();
                //System.out.println(test);
                // while(array[1000].equals(false))
                // int ss=Integer.parseInt(x);
                int c=fetch.length/7;
                int i=0,j=0,idx=0;
                while(i<c)
                {
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;
                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    j++;
                    idx++;

                    pttable.getModel().setValueAt(fetch[idx], i, j);
                    i++;
                    idx++;
                    j=0;
                }
            }
            catch(NotBoundException e){
                System.out.println("Clinicalclient not bound exception:" +e);
               // lbl.setText("Clinicalclient not bound exception:" +e.getMessage());
            }
            catch(Exception e){
                System.out.println("HelloClient exception:" +e);
            }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmd_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_printActionPerformed
        MessageFormat header=new MessageFormat("Report Print");
        MessageFormat footer=new MessageFormat("Page{0,number,integer}");
        try {
            pttable.print(JTable.PrintMode.NORMAL, header, footer);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("", e.getMessage());
        }
    }//GEN-LAST:event_cmd_printActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
           
 if (displayp.getText().equals("MANAGER")){
         cmd_print.setVisible(true);
}
 else
 {
     cmd_print.setVisible(false);
 }
    }//GEN-LAST:event_formWindowOpened

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
         if (displayp.getText().equals("DOCTOR/NURSE")) {
            new Doctor(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        } else if (displayp.getText().equals("RECEPTION")) {
            new Reception(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        } else if (displayp.getText().equals("PHARMACIST")) {
            new Pharmacist(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        } else if (displayp.getText().equals("LABORATORIST")) {
            new Laboratorist(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        } else if (displayp.getText().equals("MANAGER")) {
            new Manager(displayp.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_pat_lab_result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_pat_lab_result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_pat_lab_result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_pat_lab_result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View_pat_lab_result("","").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_print;
    private javax.swing.JLabel display;
    private javax.swing.JLabel displayp;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable pttable;
    // End of variables declaration//GEN-END:variables
}
