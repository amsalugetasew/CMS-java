


import java.awt.Color;
import java.awt.event.KeyEvent;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gech
 */
public class Change_Password extends javax.swing.JFrame {

    /**
     * Creates new form Change_Password
     */
    public Change_Password(String x, String y) {
        initComponents();
        display.setText(x);
        displayp.setText(y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        pfn = new javax.swing.JComboBox();
        cpw = new javax.swing.JPasswordField();
        pw = new javax.swing.JPasswordField();
        un = new javax.swing.JTextField();
        mid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        pwn = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        displayp = new javax.swing.JLabel();
        display = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1112, 693));
        setPreferredSize(new java.awt.Dimension(1112, 693));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("CHANGE PASSWORD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 460, 190, 40));

        pfn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        pfn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PROFFESSION", "RECEPTION", "DOCTOR/NURSE", "PHARMACIST", "LABORATORIST", "MANAGER", " " }));
        pfn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfnActionPerformed(evt);
            }
        });
        getContentPane().add(pfn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 390, 245, 34));
        getContentPane().add(cpw, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 245, 34));
        getContentPane().add(pw, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 245, 31));
        getContentPane().add(un, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, 245, 31));

        mid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                midKeyTyped(evt);
            }
        });
        getContentPane().add(mid, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, 245, 37));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("MEMBER ID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 110, 130, 31));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("USER NAME");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 170, 130, 31));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("OLD PASSWORD");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 220, 130, 31));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("PROFESSION");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 390, 130, 31));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("CONFORMATION PASSWORD");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 220, 34));
        getContentPane().add(pwn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 245, 31));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("NEW PASSWORD");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 270, 130, 31));

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));
        jDesktopPane1.add(jPanel1);
        jPanel1.setBounds(0, 10, 720, 500);

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 740, 520));
        getContentPane().add(displayp, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 130, 20));
        getContentPane().add(display, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 0, 140, 20));

        jMenu1.setText("BACK                        ");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("LOGOUT        ");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        CreateUser user = new CreateUser();
        String password=null;
        String newpassword=null;
        try {
            
            Mainclass ob;
            
            ob = new Mainclass();
            ob.member_id = mid.getText();
            ob.user_nme = un.getText();
            ob.password = pw.getText();
            ob.profssion = pfn.getSelectedItem().toString();
            String new_password = pwn.getText();
            
               String pass=new_password;
        MessageDigest md=null;//new MessageDigest("MD5");
        StringBuffer sb = new StringBuffer();
       try {
        md = MessageDigest.getInstance("MD5");
        byte[] passBytes = pass.getBytes();
        md.reset();
        byte[] digested = md.digest(passBytes);
        
        for(int i=0;i<digested.length;i++){
            sb.append(Integer.toHexString(0xff & digested[i]));
        }
         newpassword=sb.toString();
       // System.out.println(sb.toString());
    } catch (NoSuchAlgorithmException ex) {
       // CryptWithMD5
      // Logger.getLogger(CryptWithMD5.class.getName()).log(Level.SEVERE, null, ex);
    }
       
       
                   String passs=ob.password;
        MessageDigest mdp=null;//new MessageDigest("MD5");
        StringBuffer sbp = new StringBuffer();
       try {
        mdp = MessageDigest.getInstance("MD5");
        byte[] passBytes = passs.getBytes();
        mdp.reset();
        byte[] digested = mdp.digest(passBytes);
        
        for(int i=0;i<digested.length;i++){
            sbp.append(Integer.toHexString(0xff & digested[i]));
        }
         password=sbp.toString();
       // System.out.println(sb.toString());
    } catch (NoSuchAlgorithmException ex) {
       // CryptWithMD5
      // Logger.getLogger(CryptWithMD5.class.getName()).log(Level.SEVERE, null, ex);
    }
       
       
       
       
            if (mid.getText().isEmpty()) {
                //                JOptionPane.showMessageDialog(null, "Error message",
                //                                              "This is the title",
                //                                              JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(null, "pls enter member id",
                        null,
                        JOptionPane.QUESTION_MESSAGE);
                mid.setBackground(Color.red);

                // unl.setForeground(Color.RED);
            } else if (mid.getText().length() < 7 || mid.getText().length() > 11) {
                JOptionPane.showMessageDialog(null, "pls enter valid memmber id",
                        null,
                        JOptionPane.QUESTION_MESSAGE);
            } else if (un.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "pls enter user name",
                        null,
                        JOptionPane.QUESTION_MESSAGE);
            } else if (pw.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "pls enter password",
                        null,
                        JOptionPane.QUESTION_MESSAGE);
            } else if (cpw.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "pls enter conformation password",
                        null,
                        JOptionPane.QUESTION_MESSAGE);
            } else if (!pwn.getText().equals(cpw.getText())) {
                JOptionPane.showMessageDialog(null, "conformation password does not match to password",
                        null,
                        JOptionPane.QUESTION_MESSAGE);
            } else if (pwn.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "please enter new password",
                        null,
                        JOptionPane.QUESTION_MESSAGE);
            } else if (pwn.getText().length() < 8) {
                JOptionPane.showMessageDialog(null, "password must be at least eight character",
                        null,
                        JOptionPane.QUESTION_MESSAGE);
            } else {
                try {
                    RMIInterface hello = (RMIInterface) Naming.lookup("//localhost/clinical");
                    int count = (hello.change_password(ob.member_id, ob.user_nme, password, ob.profssion, newpassword));
                    if (count >= 1) {
                        JOptionPane.showMessageDialog(null, "PASSWORD CHANGED SUCESSESFULY",
                                null,
                                JOptionPane.PLAIN_MESSAGE);
                        
                        if (ob.profssion.equals("RECEPTION")) {
                            new Reception(display.getText(), displayp.getText()).setVisible(true);
                            this.setVisible(false);                            
                        } else if (ob.profssion.equals("DOCTOR/NURSE")) {
                            new Doctor(display.getText(), displayp.getText()).setVisible(true);
                            this.setVisible(false);                            
                        } else if (ob.profssion.equals("PHARMACIST")) {
                            new Pharmacist(display.getText(), displayp.getText()).setVisible(true);
                            this.setVisible(false);                            
                        } else if (ob.profssion.equals("LABORATORIST")) {
                            new Laboratorist(display.getText(), displayp.getText()).setVisible(true);
                            this.setVisible(false);                            
                        } else {
                            new Manager(display.getText(), displayp.getText()).setVisible(true);
                            this.setVisible(false);                            
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "YOU ARE NOT MEMBER OF THE SYSTEM",
                                null,
                                JOptionPane.PLAIN_MESSAGE);                        
                    }
                } catch (NotBoundException e) {
                    System.out.println("HelloClient not bound exception:" + e);
                    // lbl.setText("HelloClient not bound exception:" +e.getMessage());
                } catch (Exception e) {
                    System.out.println("HelloClient exception:" + e);
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(CreateUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void pfnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pfnActionPerformed
    
    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        
        if (displayp.getText().equals("RECEPTION")) {
            new Reception(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);  
        
        } else if (displayp.getText().equals("DOCTOR/NURSE")) {
            new Doctor(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);            
        } else if (displayp.getText().equals("PHARMACIST")) {
            new Pharmacist(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);            
        } else if (displayp.getText().equals("LABORATORIST")) {
            new Laboratorist(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);            
        } else {
            new Manager(display.getText(), displayp.getText()).setVisible(true);
            this.setVisible(false);            
        }
    }//GEN-LAST:event_jMenu1MouseClicked
    
    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        new LOGIN().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void midKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_midKeyTyped
          char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                || c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_SLASH) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            JOptionPane.showMessageDialog(null, "id number must be number",
                    null,
                    JOptionPane.QUESTION_MESSAGE);
            //gettoolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_midKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Change_Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Change_Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Change_Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Change_Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Change_Password("", "").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField cpw;
    private javax.swing.JLabel display;
    private javax.swing.JLabel displayp;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mid;
    private javax.swing.JComboBox pfn;
    private javax.swing.JPasswordField pw;
    private javax.swing.JPasswordField pwn;
    private javax.swing.JTextField un;
    // End of variables declaration//GEN-END:variables
}
